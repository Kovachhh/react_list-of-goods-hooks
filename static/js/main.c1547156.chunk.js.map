{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","none","sortBy","setSortBy","reverseSorting","setReverseSorting","goods","property","sortedGoods","alphabetical","sort","item1","item2","localeCompare","length","sortingBy","reverse","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAQKA,E,oFAAAA,K,sBAAAA,E,gBAAAA,E,SAAAA,M,KAME,IAAMC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAoBWC,EAAgB,WAC3B,MAA4BC,mBAAmBH,EAASI,MAAxD,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4CH,oBAAS,GAArD,mBAAOI,EAAP,KAAuBC,EAAvB,KACIC,EAAa,UAAOR,GAUxB,OARII,IACFI,EAvBc,SAACA,EAAeC,GAChC,IAAMC,EAAW,YAAOF,GAExB,OAAQC,GACN,KAAKV,EAASY,aACZD,EAAYE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACvD,MACF,KAAKf,EAASiB,OACZN,EAAYE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,UACxD,MACF,QACE,OAAON,EAGX,OAAOA,EASGO,CAAUT,EAAOJ,IAGvBE,GACFE,EAAMU,UAIN,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYjB,IAAWL,EAASY,eAElCW,QAAS,kBAAMjB,EAAUN,EAASY,eALpC,iCAUA,wBACES,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYjB,IAAWL,EAASiB,SAElCM,QAAS,kBAAMjB,EAAUN,EAASiB,SALpC,4BAUA,wBACEI,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAaf,IAEfgB,QAAS,kBAAMf,GAAmBD,IALpC,sBAUEF,GAAUE,IACV,wBACEc,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPjB,EAAUN,EAASI,MACnBI,GAAkB,IALtB,sBAaJ,6BACGC,EAAMe,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCvGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c1547156.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\ntype Post = string;\n\nenum SortType {\n  alphabetical = 'letter',\n  length = 'length',\n  none = '',\n}\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst sortingBy = (goods: Post[], property: SortType): Post[] => {\n  const sortedGoods = [...goods];\n\n  switch (property) {\n    case SortType.alphabetical:\n      sortedGoods.sort((item1, item2) => item1.localeCompare(item2));\n      break;\n    case SortType.length:\n      sortedGoods.sort((item1, item2) => item1.length - item2.length);\n      break;\n    default:\n      return sortedGoods;\n  }\n\n  return sortedGoods;\n};\n\nexport const App: React.FC = () => {\n  const [sortBy, setSortBy] = useState<SortType>(SortType.none);\n  const [reverseSorting, setReverseSorting] = useState(false);\n  let goods: Post[] = [...goodsFromServer];\n\n  if (sortBy) {\n    goods = sortingBy(goods, sortBy);\n  }\n\n  if (reverseSorting) {\n    goods.reverse();\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortBy !== SortType.alphabetical,\n          })}\n          onClick={() => setSortBy(SortType.alphabetical)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortBy !== SortType.length,\n          })}\n          onClick={() => setSortBy(SortType.length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !reverseSorting,\n          })}\n          onClick={() => setReverseSorting(!reverseSorting)}\n        >\n          Reverse\n        </button>\n\n        {(sortBy || reverseSorting) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortBy(SortType.none);\n              setReverseSorting(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}